// Start of user code Copyright
/*******************************************************************************
 * Copyright (c) 2012 IBM Corporation and others.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * and Eclipse Distribution License v. 1.0 which accompanies this distribution.
 *
 * The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
 * and the Eclipse Distribution License is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * Contributors:
 *
 *     Russell Boykin       - initial API and implementation
 *     Alberto Giammaria    - initial API and implementation
 *     Chris Peters         - initial API and implementation
 *     Gianluca Bernardini  - initial API and implementation
 *	   Sam Padgett	       - initial API and implementation
 *     Michael Fiedler     - adapted for OSLC4J
 *     Jad El-khoury        - initial implementation of code generator (https://bugs.eclipse.org/bugs/show_bug.cgi?id=422448)
 *
 * This file is generated by org.eclipse.lyo.oslc4j.codegenerator
 *******************************************************************************/
// End of user code

package com.ibm.oslc.adaptor.iotp.resources;

import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.text.SimpleDateFormat;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import java.util.Iterator;
import javax.servlet.http.HttpServletRequest;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import javax.ws.rs.core.UriBuilder;

import org.eclipse.lyo.oslc4j.core.annotation.OslcAllowedValue;
import org.eclipse.lyo.oslc4j.core.annotation.OslcDescription;
import org.eclipse.lyo.oslc4j.core.annotation.OslcMemberProperty;
import org.eclipse.lyo.oslc4j.core.annotation.OslcName;
import org.eclipse.lyo.oslc4j.core.annotation.OslcNamespace;
import org.eclipse.lyo.oslc4j.core.annotation.OslcOccurs;
import org.eclipse.lyo.oslc4j.core.annotation.OslcPropertyDefinition;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRange;
import org.eclipse.lyo.oslc4j.core.annotation.OslcReadOnly;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRepresentation;
import org.eclipse.lyo.oslc4j.core.annotation.OslcResourceShape;
import org.eclipse.lyo.oslc4j.core.annotation.OslcTitle;
import org.eclipse.lyo.oslc4j.core.annotation.OslcValueType;
import org.eclipse.lyo.oslc4j.core.model.AbstractResource;
import org.eclipse.lyo.oslc4j.core.model.Link;
import org.eclipse.lyo.oslc4j.core.model.Occurs;
import org.eclipse.lyo.oslc4j.core.model.OslcConstants;
import org.eclipse.lyo.oslc4j.core.model.Representation;
import org.eclipse.lyo.oslc4j.core.model.ValueType;

import com.ibm.oslc.adaptor.iotp.resources.Oslc_iotDomainConstants;
import com.ibm.oslc.adaptor.iotp.resources.Oslc_iotDomainConstants;
import com.ibm.oslc.adaptor.iotp.resources.IPerson;
import com.ibm.oslc.adaptor.iotp.resources.IPerson;
import com.ibm.oslc.adaptor.iotp.resources.IDeviceInfo;
import com.ibm.oslc.adaptor.iotp.resources.IDeviceTypeMapping;
import com.ibm.oslc.adaptor.iotp.resources.IDiscussion;
import com.ibm.oslc.adaptor.iotp.resources.ILogicalInterface;
import com.ibm.oslc.adaptor.iotp.resources.IMetaData;
import com.ibm.oslc.adaptor.iotp.resources.IPhysicalInterface;

// Start of user code imports
// End of user code

@OslcNamespace(Oslc_iotDomainConstants.IOT_PLATFORM_NAMSPACE)
@OslcName(Oslc_iotDomainConstants.DEVICETYPE)
@OslcResourceShape(title = "DeviceType Resource Shape", describes = Oslc_iotDomainConstants.TYPE_DEVICETYPE)
public interface IDeviceType
{

    public void addDeviceTypeMappings(final Link deviceTypeMappings );
    public void addLogicalInterfaces(final Link logicalInterfaces );

    @OslcName("deviceTypeMappings")
    @OslcPropertyDefinition(Oslc_iotDomainConstants.IOT_PLATFORM_NAMSPACE + "deviceTypeMappings")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({Oslc_iotDomainConstants.TYPE_DEVICETYPEMAPPING})
    @OslcReadOnly(false)
    @OslcTitle("deviceTypeMappings")
    public HashSet<Link> getDeviceTypeMappings();

    @OslcName("physicalInterface")
    @OslcPropertyDefinition(Oslc_iotDomainConstants.IOT_PLATFORM_NAMSPACE + "physicalInterface")
    @OslcOccurs(Occurs.ZeroOrOne)
    @OslcValueType(ValueType.Resource)
    @OslcRange({Oslc_iotDomainConstants.TYPE_PHYSICALINTERFACE})
    @OslcReadOnly(false)
    @OslcTitle("physicalInterface")
    public Link getPhysicalInterface();

    @OslcName("logicalInterfaces")
    @OslcPropertyDefinition(Oslc_iotDomainConstants.IOT_PLATFORM_NAMSPACE + "logicalInterfaces")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({Oslc_iotDomainConstants.TYPE_LOGICALINTERFACE})
    @OslcReadOnly(false)
    @OslcTitle("applicationInterfaces")
    public HashSet<Link> getLogicalInterfaces();

    @OslcName("deviceInfo")
    @OslcPropertyDefinition(Oslc_iotDomainConstants.IOT_PLATFORM_NAMSPACE + "deviceInfo")
    @OslcOccurs(Occurs.ZeroOrOne)
    @OslcValueType(ValueType.LocalResource)
    @OslcRange({Oslc_iotDomainConstants.TYPE_DEVICEINFO})
    @OslcReadOnly(false)
    @OslcTitle("deviceInfo")
    public DeviceInfo getDeviceInfo();

    @OslcName("metaData")
    @OslcPropertyDefinition(Oslc_iotDomainConstants.IOT_PLATFORM_NAMSPACE + "metaData")
    @OslcOccurs(Occurs.ZeroOrOne)
    @OslcValueType(ValueType.LocalResource)
    @OslcRange({Oslc_iotDomainConstants.TYPE_METADATA})
    @OslcReadOnly(false)
    @OslcTitle("metaData")
    public MetaData getMetaData();

    @OslcName("classId")
    @OslcPropertyDefinition(Oslc_iotDomainConstants.IOT_PLATFORM_NAMSPACE + "classId")
    @OslcOccurs(Occurs.ZeroOrOne)
    @OslcValueType(ValueType.String)
    @OslcReadOnly(false)
    @OslcTitle("classId")
    public String getClassId();


    public void setDeviceTypeMappings(final HashSet<Link> deviceTypeMappings );
    public void setPhysicalInterface(final Link physicalInterface );
    public void setLogicalInterfaces(final HashSet<Link> logicalInterfaces );
    public void setDeviceInfo(final DeviceInfo deviceInfo );
    public void setMetaData(final MetaData metaData );
    public void setClassId(final String classId );
}

